version: "3.7"

services:
  backend:
    build: ./backend
    container_name: drf-media-server_backend
    restart: unless-stopped
    networks:
      network:
        ipv4_address: "172.35.0.2"
    environment:
      - APP_MODULE=config.wsgi:application
      - HOST=172.35.0.2
      - PORT=80
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    container_name: drf-media-server_db
    restart: unless-stopped
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      network:
        ipv4_address: "172.35.0.3"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  webserver:
    image: nginx:1.19-alpine
    container_name: drf-media-server_webserver
    restart: unless-stopped
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./backend/static:/static
    networks:
      network:
        ipv4_address: "172.35.0.4"
    environment:
      - GUNICORN_HOST=172.35.0.2
      - GUNICORN_PORT=80
    ports:
      - "8080:80"
    depends_on:
      - backend

networks:
  network:
    ipam:
      driver: default
      config:
        - subnet: "172.35.0.0/28"
